@page "/Profile"
@inject UserService UserService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@using m1Chat.Client.Services

<MudContainer MaxWidth="MaxWidth.Medium">
    <MudPaper Elevation="3" Class="pa-4 rounded-lg blur-background">
        <MudGrid Spacing="0">
            <MudItem xs="12" Class="d-flex align-center">
                <MudIconButton Icon="@Icons.Material.Filled.ArrowBack"
                               Color="Color.Inherit"
                               OnClick="NavigateToChat"
                               Edge="Edge.Start" />
                <MudText Typo="Typo.h4" Class="flex-grow-1 text-center pr-10">
                    User Profile
                </MudText>
            </MudItem>

            <MudItem xs="12" Class="mb-4">
                <MudCard Elevation="0">
                    <MudCardContent>
                        <MudText Typo="Typo.h5" Class="mb-2">
                            Account Information
                        </MudText>
                        <MudText Typo="Typo.h6" Color="Color.Primary">
                           Email
                        </MudText>
                        <MudText>
                            @UserEmail
                        </MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>

            <MudItem xs="12" Class="mb-4">
                <MudCard Elevation="0">
                    <MudCardContent>
                        <MudText Typo="Typo.h5" Class="mb-2">Usage Statistics</MudText>
                        <MudGrid>
                            <MudItem xs="12" sm="4" Class="text-center">
                                <MudText Typo="Typo.h4" Color="Color.Primary">@TotalChats</MudText>
                                <MudText>Chat Threads</MudText>
                            </MudItem>
                            <MudItem xs="12" sm="4" Class="text-center">
                                <MudText Typo="Typo.h4" Color="Color.Primary">@TotalMessages</MudText>
                                <MudText>Messages Sent</MudText>
                            </MudItem>
                        </MudGrid>
                    </MudCardContent>
                </MudCard>
            </MudItem>
            
            <MudPaper Elevation="0">
            <MudText Typo="Typo.h5" Class="mb-2">Enable/Disable Models</MudText>
            <MudDataGrid Items="@models" 
                         Filterable="false" 
                         SortMode="@SortMode.None" 
                         Groupable="false" 
                         MultiSelection="true" 
                         SelectedItems="@selectedModels" 
                         SelectedItemsChanged="@(EventCallback.Factory.Create<HashSet<Model>>(this, OnSelectedItemsChanged))">
                <Columns>
                    <SelectColumn T="Model"/>
                    <PropertyColumn Property="x => x.Name" Title="Model" />
                    <PropertyColumn Property="x => x.Provider"/>
                </Columns>
            </MudDataGrid>
            </MudPaper>

            <MudItem xs="12" Class="mb-4">
                <MudCard Elevation="0">
                    <MudCardContent>
                        <MudText Typo="Typo.h5" Class="mb-2">Bring Your Own Key</MudText>
                        <MudText Class="mt-2">OpenRouter</MudText>
                        <MudTextField @bind-Value="Openrouterkey" Label="sk-1234...." Variant="Variant.Outlined" Class="rounded-xl"></MudTextField>
                        <MudText Class="mt-4">AI Studio</MudText>
                        <MudTextField @bind-Value="AiStudioKey" Label="sk-1234...." Variant="Variant.Outlined" Class="rounded-xl"></MudTextField>
                        <MudText Class="mt-4">Chutes</MudText>
                        <MudTextField @bind-Value="ChutesKey" Label="sk-1234...." Variant="Variant.Outlined" Class="rounded-xl"></MudTextField>
                        <MudText Class="mt-4">Mistral</MudText>
                        <MudTextField @bind-Value="MistralKey" Label="sk-1234...." Variant="Variant.Outlined" Class="rounded-xl"></MudTextField>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" Class="mt-3 rounded-xl" OnClick="ShowNotImplementedSnackbar">Save</MudButton>
                    </MudCardContent>
                </MudCard>
            </MudItem>

            <MudItem xs="12" Class="text-center mt-4">
                <MudButton Variant="Variant.Outlined"
                           Color="Color.Error"
                           StartIcon="@Icons.Material.Filled.Logout"
                           OnClick="Logout"
                           Class="mt-4">
                    Logout
                </MudButton>
            </MudItem>
        </MudGrid>
    </MudPaper>
</MudContainer>

@code {
    private string UserEmail { get; set; } = "Loading...";
    private int TotalChats = 0;
    private int TotalMessages = 0;
    private string? Openrouterkey { get; set; }
    public string? AiStudioKey { get; set; }
    public string? ChutesKey { get; set; }
    public string? MistralKey { get; set; }

    public record Model(string Name, string Provider);
    
    // Changed to List<Model> instead of IEnumerable<Model>
    public List<Model> models = new();
    public HashSet<Model> selectedModels = new HashSet<Model>();

    protected override async Task OnInitializedAsync()
    {
        UserEmail = await UserService.GetUserEmailAsync() ?? "Unknown";
        var stats = await UserService.GetUserStatsAsync();
        if (stats != null)
        {
            TotalChats = stats.TotalChats;
            TotalMessages = stats.TotalMessages;
        }
        else
        {
            Console.WriteLine("Could not fetch user stats.");
            TotalChats = 0;
            TotalMessages = 0;
        }
        
        // Initialize the list directly
        models = new List<Model>
        {
            new Model("Deepseek v3", "Chutes"),
            new Model("Deepseek R1 0528", "Chutes"),
            new Model("Gemini 2.5 Flash", "AI Studio"),
            new Model("Gemini 2.0 Flash", "AI Studio"),
            new Model("Devstral Small", "Mistral AI"),
            new Model("Mistral Medium", "Mistral AI"),
            new Model("Gemma 3 27B", "Openrouter"),
            new Model("Llama 4 Maverick", "Openrouter"),
            new Model("Llama 3.1 8B", "Groq"),
            new Model("Llama 4 Scout", "Groq"),
        };
        
        selectedModels = new HashSet<Model>(models);
    }

    private void OnSelectedItemsChanged(HashSet<Model> items)
    {
        selectedModels = items;
        // You can use the selected models list here
        foreach (var model in selectedModels)
        {
            Console.WriteLine($"Selected: {model.Name}");
        }
    }

    private void Logout()
    {
        NavigationManager.NavigateTo("/", forceLoad: true);
    }

    private void NavigateToChat()
    {
        NavigationManager.NavigateTo("/Chat");
    }

    private void ShowNotImplementedSnackbar()
    {
        Snackbar.Add("Feature not yet implemented.", Severity.Warning);
    }
}
